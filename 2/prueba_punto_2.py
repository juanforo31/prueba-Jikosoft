# -*- coding: utf-8 -*-
"""Prueba_punto_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13sots-pZVUI-gMbl24u4gteIY6QzvR3w
"""

## Se importa unittest para poder hacer pruebas unitarias de la función a crear
import unittest

## Se realiza la función a crear
# 1. Debe tomar una lista de enteros y un número entero
# 2. Devolver los indices de los dos números que sumados dan el resultado del entero destino.

def find_sum_index(list_nums, number):
  ## Se crea la variable de retorno
  result = []
  ## Recorremos la lista de números obteniendo el índice y el número
  for i, number1 in enumerate(list_nums) :
    ## Hacer un recorrido en una lista que comience en la posición siguiente al indice de la primera lista
    for j, number2  in enumerate(list_nums[i+1:], start= i+1):
      # Si la suma de los dos números es igual al ingresado, este guardara la dupla en una lista
      if number1 + number2 == number: result.append((i,j))
  return result

## Se crea una clase la cual nos ayudara a realizar pruebas unitarias según diferentes escenarios
class TestSumIndexFunction(unittest.TestCase):
  ## Existe un par
  def test_pair_exists(self):
    list_nums = [2, 7, 11, 15]
    number = 9
    result = find_sum_index(list_nums, number)
    self.assertEqual(result, [(0, 1)])

  ## No existe un par
  def test_no_pair_exists(self):
    list_nums = [1, 2, 3]
    number = 7
    result = find_sum_index(list_nums, number)
    self.assertEqual(result, [])

  ## Con una lista en donde hay números negativos
  def test_negative_numbers(self):
    list_nums = [-3, 4, 3, 90]
    number = 0
    result = find_sum_index(list_nums, number)
    self.assertEqual(result, [(0, 2)])

  ## Con una lista en donde hay números duplicados
  def test_duplicate_values(self):
    list_nums = [3, 3]
    number = 6
    result = find_sum_index(list_nums, number)
    self.assertEqual(result, [(0, 1)])

  ## Donde el resultado envía mas de una dupla
  def test_multiple_possible_pairs(self):
    list_nums = [1, 2, 3, 4, 5]
    number = 6
    result = find_sum_index(list_nums, number)
    self.assertEqual(result, [(0, 4), (1, 3)])

## Ejecución de las pruebas unitarias
unittest.main(argv=[''], verbosity=2, exit=False)